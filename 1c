clc
close all
clear all
N = 1000;
m = 0; 
sgma=1;
for i=1:2:N
[X1(i),X1(i+1)] = gngauss(m,sgma); % generates cos and sine signals
[X2(i),X2(i+1)] = gngauss(m,sgma);
A = [1 -0.9];
B = 1;
Xc = filter(B,A,X1); % in phase component 
Xs = filter(B,A,X2);% quadrature component

end
fc = 1000/pi;
for i=1:N
    band_pass_process(i) = Xc(i)*cos(2*pi*fc*i)-Xs(i)*sin(2*pi*fc*i); 
end

M = 50;
bpp_autocorr = Rx_est(band_pass_process,M);
bpp_spectrum = fftshift(abs(fft(bpp_autocorr)));
plot(linspace(-0.5,0.5,51),bpp_spectrum);

function[Rx] = Rx_est(X,M)
N = 1000;
Rx = zeros(1,M+1);
for m=1:M+1
    for n=1:N-m+1
        Rx(m) = Rx(m) + X(n)*X(n+m-1);
    end
    Rx(m) = Rx(m)/(N-m+1);
end
end

function[gsrv1, gsrv2] = gngauss(m,sgma)
u = rand; % single random value
z = sgma*(sqrt(2*log(1/(1-u))));
gsrv1 = m + z*cos(2*pi*u);
gsrv2 = m + z*sin(2*pi*u);
end
